#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -I../dependencies/glm/include -I../dependencies/freeimage/include
CFLAGS = -Wall -fPIC -fexceptions
RESINC = 
LIBDIR = 
LIB = -lglut -lGL -lfreeimage -lGLU
LDFLAGS = 

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -fPIC -g -fexceptions
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/Engine.so

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS)
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/Engine.so

OBJ_DEBUG = $(OBJDIR_DEBUG)/Object.o $(OBJDIR_DEBUG)/OrthogonalProjection.o $(OBJDIR_DEBUG)/PerspectiveProjection.o $(OBJDIR_DEBUG)/PointLight.o $(OBJDIR_DEBUG)/Node.o $(OBJDIR_DEBUG)/Projection.o $(OBJDIR_DEBUG)/SpotLight.o $(OBJDIR_DEBUG)/Texture.o $(OBJDIR_DEBUG)/UIProjection.o $(OBJDIR_DEBUG)/Vertex.o $(OBJDIR_DEBUG)/DirectionalLight.o $(OBJDIR_DEBUG)/Engine.o $(OBJDIR_DEBUG)/FakeShadow.o $(OBJDIR_DEBUG)/FileReader.o $(OBJDIR_DEBUG)/FrameRate.o $(OBJDIR_DEBUG)/Camera.o $(OBJDIR_DEBUG)/Light.o $(OBJDIR_DEBUG)/List.o $(OBJDIR_DEBUG)/Material.o $(OBJDIR_DEBUG)/Mesh.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/Object.o $(OBJDIR_RELEASE)/OrthogonalProjection.o $(OBJDIR_RELEASE)/PerspectiveProjection.o $(OBJDIR_RELEASE)/PointLight.o $(OBJDIR_RELEASE)/Node.o $(OBJDIR_RELEASE)/Projection.o $(OBJDIR_RELEASE)/SpotLight.o $(OBJDIR_RELEASE)/Texture.o $(OBJDIR_RELEASE)/UIProjection.o $(OBJDIR_RELEASE)/Vertex.o $(OBJDIR_RELEASE)/DirectionalLight.o $(OBJDIR_RELEASE)/Engine.o $(OBJDIR_RELEASE)/FakeShadow.o $(OBJDIR_RELEASE)/FileReader.o $(OBJDIR_RELEASE)/FrameRate.o $(OBJDIR_RELEASE)/Camera.o $(OBJDIR_RELEASE)/Light.o $(OBJDIR_RELEASE)/List.o $(OBJDIR_RELEASE)/Material.o $(OBJDIR_RELEASE)/Mesh.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) -shared $(LDFLAGS_DEBUG) $(LIBDIR_DEBUG) $(OBJ_DEBUG) $(LIB_DEBUG) -o $(OUT_DEBUG)

$(OBJDIR_DEBUG)/Object.o: Object.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Object.cpp -o $(OBJDIR_DEBUG)/Object.o

$(OBJDIR_DEBUG)/OrthogonalProjection.o: OrthogonalProjection.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c OrthogonalProjection.cpp -o $(OBJDIR_DEBUG)/OrthogonalProjection.o

$(OBJDIR_DEBUG)/PerspectiveProjection.o: PerspectiveProjection.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c PerspectiveProjection.cpp -o $(OBJDIR_DEBUG)/PerspectiveProjection.o

$(OBJDIR_DEBUG)/PointLight.o: PointLight.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c PointLight.cpp -o $(OBJDIR_DEBUG)/PointLight.o

$(OBJDIR_DEBUG)/Node.o: Node.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Node.cpp -o $(OBJDIR_DEBUG)/Node.o

$(OBJDIR_DEBUG)/Projection.o: Projection.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Projection.cpp -o $(OBJDIR_DEBUG)/Projection.o

$(OBJDIR_DEBUG)/SpotLight.o: SpotLight.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c SpotLight.cpp -o $(OBJDIR_DEBUG)/SpotLight.o

$(OBJDIR_DEBUG)/Texture.o: Texture.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Texture.cpp -o $(OBJDIR_DEBUG)/Texture.o

$(OBJDIR_DEBUG)/UIProjection.o: UIProjection.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c UIProjection.cpp -o $(OBJDIR_DEBUG)/UIProjection.o

$(OBJDIR_DEBUG)/Vertex.o: Vertex.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Vertex.cpp -o $(OBJDIR_DEBUG)/Vertex.o

$(OBJDIR_DEBUG)/DirectionalLight.o: DirectionalLight.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c DirectionalLight.cpp -o $(OBJDIR_DEBUG)/DirectionalLight.o

$(OBJDIR_DEBUG)/Engine.o: Engine.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Engine.cpp -o $(OBJDIR_DEBUG)/Engine.o

$(OBJDIR_DEBUG)/FakeShadow.o: FakeShadow.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c FakeShadow.cpp -o $(OBJDIR_DEBUG)/FakeShadow.o

$(OBJDIR_DEBUG)/FileReader.o: FileReader.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c FileReader.cpp -o $(OBJDIR_DEBUG)/FileReader.o

$(OBJDIR_DEBUG)/FrameRate.o: FrameRate.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c FrameRate.cpp -o $(OBJDIR_DEBUG)/FrameRate.o

$(OBJDIR_DEBUG)/Camera.o: Camera.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Camera.cpp -o $(OBJDIR_DEBUG)/Camera.o

$(OBJDIR_DEBUG)/Light.o: Light.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Light.cpp -o $(OBJDIR_DEBUG)/Light.o

$(OBJDIR_DEBUG)/List.o: List.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c List.cpp -o $(OBJDIR_DEBUG)/List.o

$(OBJDIR_DEBUG)/Material.o: Material.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Material.cpp -o $(OBJDIR_DEBUG)/Material.o

$(OBJDIR_DEBUG)/Mesh.o: Mesh.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Mesh.cpp -o $(OBJDIR_DEBUG)/Mesh.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) -shared $(LDFLAGS_RELEASE) $(LIBDIR_RELEASE) $(OBJ_RELEASE) $(LIB_RELEASE) -o $(OUT_RELEASE)

$(OBJDIR_RELEASE)/Object.o: Object.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Object.cpp -o $(OBJDIR_RELEASE)/Object.o

$(OBJDIR_RELEASE)/OrthogonalProjection.o: OrthogonalProjection.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c OrthogonalProjection.cpp -o $(OBJDIR_RELEASE)/OrthogonalProjection.o

$(OBJDIR_RELEASE)/PerspectiveProjection.o: PerspectiveProjection.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c PerspectiveProjection.cpp -o $(OBJDIR_RELEASE)/PerspectiveProjection.o

$(OBJDIR_RELEASE)/PointLight.o: PointLight.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c PointLight.cpp -o $(OBJDIR_RELEASE)/PointLight.o

$(OBJDIR_RELEASE)/Node.o: Node.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Node.cpp -o $(OBJDIR_RELEASE)/Node.o

$(OBJDIR_RELEASE)/Projection.o: Projection.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Projection.cpp -o $(OBJDIR_RELEASE)/Projection.o

$(OBJDIR_RELEASE)/SpotLight.o: SpotLight.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c SpotLight.cpp -o $(OBJDIR_RELEASE)/SpotLight.o

$(OBJDIR_RELEASE)/Texture.o: Texture.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Texture.cpp -o $(OBJDIR_RELEASE)/Texture.o

$(OBJDIR_RELEASE)/UIProjection.o: UIProjection.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c UIProjection.cpp -o $(OBJDIR_RELEASE)/UIProjection.o

$(OBJDIR_RELEASE)/Vertex.o: Vertex.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Vertex.cpp -o $(OBJDIR_RELEASE)/Vertex.o

$(OBJDIR_RELEASE)/DirectionalLight.o: DirectionalLight.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c DirectionalLight.cpp -o $(OBJDIR_RELEASE)/DirectionalLight.o

$(OBJDIR_RELEASE)/Engine.o: Engine.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Engine.cpp -o $(OBJDIR_RELEASE)/Engine.o

$(OBJDIR_RELEASE)/FakeShadow.o: FakeShadow.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c FakeShadow.cpp -o $(OBJDIR_RELEASE)/FakeShadow.o

$(OBJDIR_RELEASE)/FileReader.o: FileReader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c FileReader.cpp -o $(OBJDIR_RELEASE)/FileReader.o

$(OBJDIR_RELEASE)/FrameRate.o: FrameRate.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c FrameRate.cpp -o $(OBJDIR_RELEASE)/FrameRate.o

$(OBJDIR_RELEASE)/Camera.o: Camera.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Camera.cpp -o $(OBJDIR_RELEASE)/Camera.o

$(OBJDIR_RELEASE)/Light.o: Light.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Light.cpp -o $(OBJDIR_RELEASE)/Light.o

$(OBJDIR_RELEASE)/List.o: List.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c List.cpp -o $(OBJDIR_RELEASE)/List.o

$(OBJDIR_RELEASE)/Material.o: Material.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Material.cpp -o $(OBJDIR_RELEASE)/Material.o

$(OBJDIR_RELEASE)/Mesh.o: Mesh.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Mesh.cpp -o $(OBJDIR_RELEASE)/Mesh.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

